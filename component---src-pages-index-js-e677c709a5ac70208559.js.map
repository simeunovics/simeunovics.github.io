{"version":3,"sources":["webpack:///component---src-pages-index-js-e677c709a5ac70208559.js","webpack:///./src/components/PostLink.js","webpack:///./src/pages/index.js"],"names":["webpackJsonp","204","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_gatsbyLink2","PostLink","_ref","post","createElement","to","frontmatter","path","title","date","208","pageQuery","undefined","_PostLink","_PostLink2","IndexPage","edges","data","allMarkdownRemark","Posts","filter","edge","node","map","key","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAAeP,EAAuBM,GCZrCE,EAAW,SAAAC,GAAA,GAAGC,GAAHD,EAAGC,IAAH,OACfL,GAAAF,QAAAQ,cAAA,WACEN,EAAAF,QAAAQ,cAAAJ,EAAAJ,SAAMS,GAAIF,EAAKG,YAAYC,MACxBJ,EAAKG,YAAYE,MADpB,KAC6BL,EAAKG,YAAYG,KAD9C,MD8BHlB,GAAQK,QCxBMK,EDyBdX,EAAOC,QAAUA,EAAiB,SAI7BmB,IACA,SAAUpB,EAAQC,EAASC,GAEhC,YAiBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAfvFH,EAAQI,YAAa,EACrBJ,EAAQoB,UAAYC,ME9CrB,IAAAf,GAAAL,EAAA,GFkDKM,EAAUL,EAAuBI,GEjDtCE,EAAAP,EAAA,IACAqB,GFoDoBpB,EAAuBM,GEpD3CP,EAAA,MFwDKsB,EAAarB,EAAuBoB,GEtDnCE,EAAY,SAAAb,GAIZ,GAFmBc,GAEnBd,EAHJe,KACEC,kBAAqBF,MAGjBG,EAAQH,EACXI,OAAO,SAAAC,GAAA,QAAUA,EAAKC,KAAKhB,YAAYG,OACvCc,IAAI,SAAAF,GAAA,MACHvB,GAAAF,QAAAQ,cAAA,UACEN,EAAAF,QAAAQ,cAAAU,EAAAlB,SAAU4B,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC,SAI9C,OACExB,GAAAF,QAAAQ,cAAA,YACIN,EAAAF,QAAAQ,cAAA,uBACFN,EAAAF,QAAAQ,cAAA,WACAN,EAAAF,QAAAQ,cAAA,UAAKe,IFwEV5B,GAAQK,QEnEMmB,CAEFJ","file":"component---src-pages-index-js-e677c709a5ac70208559.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(46);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar PostLink = function PostLink(_ref) {\n\t  var post = _ref.post;\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _gatsbyLink2.default,\n\t      { to: post.frontmatter.path },\n\t      post.frontmatter.title,\n\t      ' (',\n\t      post.frontmatter.date,\n\t      ')'\n\t    )\n\t  );\n\t};\n\t\n\texports.default = PostLink;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(46);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _PostLink = __webpack_require__(204);\n\t\n\tvar _PostLink2 = _interopRequireDefault(_PostLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar IndexPage = function IndexPage(_ref) {\n\t  var edges = _ref.data.allMarkdownRemark.edges;\n\t\n\t  var Posts = edges.filter(function (edge) {\n\t    return !!edge.node.frontmatter.date;\n\t  }) // You can filter your posts based on some criteria\n\t  .map(function (edge) {\n\t    return _react2.default.createElement(\n\t      'li',\n\t      null,\n\t      _react2.default.createElement(_PostLink2.default, { key: edge.node.id, post: edge.node })\n\t    );\n\t  });\n\t\n\t  return _react2.default.createElement(\n\t    'main',\n\t    null,\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      'Articles:'\n\t    ),\n\t    _react2.default.createElement('br', null),\n\t    _react2.default.createElement(\n\t      'ul',\n\t      null,\n\t      Posts\n\t    )\n\t  );\n\t};\n\t\n\texports.default = IndexPage;\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-e677c709a5ac70208559.js","import React from 'react'\nimport Link from 'gatsby-link'\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\n\nexport default PostLink\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/PostLink.js","import React from 'react'\nimport Link from 'gatsby-link'\nimport PostLink from '../components/PostLink'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => (\n      <li>\n        <PostLink key={edge.node.id} post={edge.node} />\n      </li>\n    ))\n\n  return (\n    <main>\n        <h3>Articles:</h3>\n      <br />\n      <ul>{Posts}</ul>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js"],"sourceRoot":""}